language: bash

sudo: required

services:
  - docker

env:
##   5.6
#  - VERSION=5.6 VARIANT=cli PHP_VERSION=5.6.33
#  - VERSION=5.6 VARIANT=fpm PHP_VERSION=5.6.33
#  - VERSION=5.6 VARIANT=nginx PHP_VERSION=5.6.33
##   7.0
#  - VERSION=7.0 VARIANT=cli PHP_VERSION=7.0.27
#  - VERSION=7.0 VARIANT=fpm PHP_VERSION=7.0.27
#  - VERSION=7.0 VARIANT=nginx PHP_VERSION=7.0.27
##   7.1
#  - VERSION=7.1 VARIANT=cli PHP_VERSION=7.1.13
#  - VERSION=7.1 VARIANT=fpm PHP_VERSION=7.1.13
#  - VERSION=7.1 VARIANT=nginx PHP_VERSION=7.1.13
##   7.2
#  - VERSION=7.2 VARIANT=cli PHP_VERSION=7.2.1
#  - VERSION=7.2 VARIANT=fpm PHP_VERSION=7.2.1
  - VERSION=7.2 VARIANT=nginx PHP_VERSION=7.2.1

before_install:
  - export DOCKER_COMPOSE_VERSION=1.18.0
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - env | sort
  - cd "$VERSION/$VARIANT"
  - image="xutl/php:${VERSION}-${VARIANT}"

script:
  - travis_retry docker build --build-arg PHP_VERSION=${PHP_VERSION} -t "$image" .

after_success:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login --username="${DOCKER_REGISTRY_USER}" --password="${DOCKER_REGISTRY_PASSWORD}";
      docker push $image;
      docker tag $image xutl/php:${PHP_VERSION}-${VARIANT};
      docker push xutl/php:${PHP_VERSION}-${VARIANT};
      if [ "${VERSION}" == "7.1" ]; then
        if [ "${VARIANT}" == "fpm" ]; then
          docker tag $image xutl/php:latest;
          docker push xutl/php:latest;
          docker tag $image xutl/php:${PHP_VERSION};
          docker push xutl/php:${PHP_VERSION};
          docker tag $image xutl/php:${VERSION};
          docker push xutl/php:${VERSION};
        fi
      fi
    fi

# vim:set et ts=2 sw=2:
